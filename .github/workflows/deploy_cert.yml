name: filetransfer ci/cd

on: 
  push:
    branches: [develop]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
#      - uses: actions/checkout@v3
#        with:
#          repository: machacamoya/ansible-playbook
#          token: ${{ secrets.MYPAT }}
#          path: ansible
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'
      - name: Build snapshoot
        run: |
          pwd
          ls -ltr
          mvn -ntp -B clean verify -DskipITs=true
          pwd
          ls -ltr
          type ansible
          type ansible-playbook
  Unit_Testing:
      needs: [build]
      runs-on: ubuntu-latest
      steps:
        - name: Ejecutando comando
          run: |
            echo -e "ESTOY EN UNIT TESTING\n"
  Code_Analysis:
      needs: [Unit_Testing]
      runs-on: ubuntu-latest
      steps:
        - name: Ejecutando comando
          run: |
            echo -e "ESTOY EN CODE ANALYSIS\n"
  CodeArtifact:
      needs: [Code_Analysis]
      runs-on: ubuntu-latest
      environment: CERT
      steps:
        - name: Ejecutando comando
          run: |
            echo -e "ESTOY EN CODEARTIFACT\n"
        - name: Authenticate to CodeArtifact
          uses: source-ag/codeartifact-login-action@v1
          with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: ${{ secrets.AWS_REGION }}
            #role-to-assume: ${{ secrets.PACKAGE_REPOSITORY_ROLE }}
            codeartifact-domain: ${{ secrets.CODEARTIFACT_DOMAIN }}
            #codeartifact-domain-owner: 123456789012
            codeartifact-repository: ${{ secrets.CODEARTIFACT_REPOSITORY }}
        - name: Build and publish
          run: |
            export AWS_USERNAME=aws
            export AWS_TOKEN=`aws codeartifact get-authorization-token --domain ${{ secrets.CODEARTIFACT_DOMAIN }} --query authorizationToken --output text`
            export AWS_REPOSITORY_URL=`aws codeartifact get-repository-endpoint --domain ${{ secrets.CODEARTIFACT_DOMAIN }} --repository ${{ secrets.CODEARTIFACT_REPOSITORY }} --format maven --query repositoryEndpoint --output text`
            echo -e "\n\n\t${AWS_TOKEN}\n\n"
            echo "${AWS_REPOSITORY_URL}\n\n"
            #aws codeartifact get-repository-endpoint --domain my_domain --repository my_repo --format maven
            #curl --request PUT https://my_domain-111122223333.d.codeartifact.us-west-2.amazonaws.com/maven/my_repo/com/mycompany/app/my-app/1.0/my-app-1.0.jar \
     #--user "aws:$CODEARTIFACT_AUTH_TOKEN" --header "Content-Type: application/octet-stream" \
     #--data-binary @my-app-1.0.jar
          
  Deploy_CERT:
      needs: [CodeArtifact]
      runs-on: ubuntu-latest
      steps:
        - name: Ejecutando comando
          run: |
            echo -e "ESTOY EN DEPLOY CERT\n"
